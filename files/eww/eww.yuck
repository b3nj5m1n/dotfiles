{{#if (eq_string window_manager "sway")}}
(deflisten sway "pfui start sway")
{{/if}}
{{#if (eq_string window_manager "bspwm")}}
(deflisten workspaces-json "./workspace")
{{/if}}

(deflisten pulse-volume "pfui start pulseaudio")
(deflisten mpd-info "pfui start mpd")

{{#if (eq_string window_manager "bspwm")}}
(deflisten active-window-title "xtitle -s")
{{/if}}

{{#if (eq_string window_manager "bspwm")}}
(defpoll keymap :interval "1m" "setxkbmap -query | awk '/layout/ {print $2}'")
{{/if}}
(defpoll uptime :interval "1m" "~/.local/share/bin/uptime.sh")
(defpoll date-time :interval "1m" "date '+%d/%m/%y %H:%M'")

(defpoll logseq-running :interval "5s" "~/.local/share/bin/is_program_running.sh logseq")
(defpoll zotero-running :interval "5s" "~/.local/share/bin/is_program_running.sh zotero")

(defpoll logseq-last-sync :interval "1s" "last_sync=$(cat /tmp/sync-status-91224df1aaf9d2f968c5e0ab46ec0c05fb81dc3d40bad11d98f7dedd3b578b54); current=$(date +%s); echo $((($current - $last_sync)/60))")
(defpoll zotero-last-sync :interval "1s" "last_sync=$(cat /tmp/sync-status-fd69fbe01f61cefe7f97191f7f0131a55afafcd9d3493e5ba6abb02a1af22f82); current=$(date +%s); echo $((($current - $last_sync)/60))")


;;;;; Left

{{#if (eq_string window_manager "sway")}}
(defwidget workspaces []
  (box
      :orientation "h"
      :halign "start"
      :class "workspaces"
    (for workspace in { sway.data.workspaces }
      (button 
        :onclick "bspc desktop -f ${workspace.name}"
        :class "workspace ${(workspace.focused == true ? "workspace-current" : (workspace.visible == true ? "workspace-occupied" : "workspace-empty"))}"
        "${workspace.name}"))))
{{/if}}

{{#if (eq_string window_manager "bspwm")}}
(defwidget workspaces []
  (box
      :orientation "h"
      :halign "start"
      :class "workspaces"
    (for workspace in workspaces-json
      (button 
        :onclick "bspc desktop -f ${workspace.name}"
        :class "workspace ${(workspace.state == "current" ? "workspace-current" : (workspace.state == "occupied" ? "workspace-occupied" : "workspace-empty"))}"
        "${workspace.name}"))))
{{/if}}

(defwidget mpd []
  (box :orientation "h" 
      :space-evenly false  
      :halign "start"
      :class "container-mpd"
    (label :text {
        mpd-info.ok == 1 ?
        mpd-info.data.state.status == 2 ?
        "Stopped"
        : mpd-info.data.state.status == 0 ?
        mpd-info.data.song.artist + " - " + mpd-info.data.song.title
        : "Paused"
        : "MPD Unreachable"
    } :limit-width 40 :class "label-mpd")))

(defwidget left []
  (box :orientation "h" 
      :space-evenly false  
      :halign "start"
      :class "left"
    (workspaces)
    (mpd)
    (logseq-running-indicator)
    (zotero-running-indicator)))


;;;;; Center

(defwidget center []
  (box :orientation "h" 
      :space-evenly false  
      :halign "center"
      :class "center"
{{#if (eq_string window_manager "sway")}}
    (label :text { sway.data.window_title } :limit-width 30 :class "label-active-window")))
{{/if}}
{{#if (eq_string window_manager "bspwm")}}
    (label :text active-window-title :limit-width 30 :class "label-active-window")))
{{/if}}


;;;;; Right

{{#if has_battery}}
(defwidget battery []
  (box :orientation "h" 
      :space-evenly false  
      :halign "end"
      :class "container-battery
        ${(EWW_BATTERY.{{ battery_name }}.status == 'Discharging') ? (EWW_BATTERY.{{ battery_name }}.capacity <= 20) ? 'battery-status-critical' : 'battery-status-discharging'
        : (EWW_BATTERY.{{ battery_name }}.status == 'Not charging') ? 'battery-status-not-charging'
        : (EWW_BATTERY.{{ battery_name }}.status == 'Charging') ? 'battery-status-charging' : 'battery-status-unkown' }"
    (label :text { EWW_BATTERY.{{ battery_name }}.capacity + "%" }
      :class "label-battery")))
{{/if}}

(defwidget volume []
  (box :orientation "h" 
      :space-evenly false  
      :halign "end"
      :class "container-volume
        ${(pulse-volume.ok == 1)
        ? (pulse-volume.data.muted) ? 'pulse-muted' : 'pulse-unmuted'
        : 'pulse-error'}"
    (label :text {
        pulse-volume.ok == 1 ?
        pulse-volume.data.volume + "%"
        : "Error connecting to pulse"
    } :class "label-volume")))

(defwidget keymap []
  (box :orientation "h" 
      :space-evenly false  
      :halign "end"
      :class "container-keymap"
{{#if (eq_string window_manager "sway")}}
    (button :class "label-keymap" :onclick "~/.local/share/bin/keyboard-layout-switcher.sh" { sway.data.kbd_layout })))
{{/if}}
{{#if (eq_string window_manager "bspwm")}}
    (button :class "label-keymap" :onclick "~/.local/share/bin/keyboard-layout-switcher.sh" keymap)))
{{/if}}

(defwidget uptime []
  (box :orientation "h" 
      :space-evenly false  
      :halign "end"
      :class "container-uptime"
    (label :text uptime :class "label-uptime")))

(defwidget logseq-running-indicator []
  (button :orientation "h" 
      :space-evenly false  
      :halign "end"
      :class "program-sync-indicator program-sync-indicator-status-${logseq-last-sync < 5 ? 4 : 
      (logseq-last-sync < 15 ? 3 : (logseq-last-sync < 30 ? 2 : 1))}"
      :visible "${logseq-running == "running" ? true : false}"
      :onclick "/home/b3nj4m1n/.local/share/bin/auto_commit.sh /home/b3nj4m1n/.local/share/logseq false &"
    (label :text "LOGSEQ: ${logseq-last-sync}" :class "label-logseq-status")))
(defwidget zotero-running-indicator []
  (button :orientation "h" 
      :space-evenly false  
      :halign "end"
      :class "program-sync-indicator program-sync-indicator-status-${zotero-last-sync < 5 ? 4 : 
      (zotero-last-sync < 15 ? 3 : (zotero-last-sync < 30 ? 2 : 1))}"
      :visible "${zotero-running == "running" ? true : false}"
      :onclick "/home/b3nj4m1n/.local/share/bin/auto_commit.sh /home/b3nj4m1n/Zotero false &"
    (label :text "ZOTERO: ${zotero-last-sync}" :class "label-zotero-status")))

(defwidget date []
  (box :orientation "h"
      :space-evenly false
      :halign "end"
      :class "container-date-time"
    (label :text date-time :class "label-date-time")))

(defwidget right []
  (box :orientation "h"
      :space-evenly false
      :halign "end"
      :class "right"
    {{#if has_battery}}(battery){{/if}}
    (volume)
    (keymap)
    (uptime)
    (date)))


(defwidget bar []
  (box :class "bar"
       :orientation "h"
    (left)
    (center)
    (right)))


;;;;; Right

(defwindow bar 
    :geometry
      (geometry
        :x "0%"
        :y "5px"
        :height "30px"
        :width "99%"
        :anchor "top center")
    :stacking "fg"
    :windowtype "dock"
    :exclusive "true"
    :reserve (struts :distance "45px" :side "top")
    :cursor "pointer"
    :monitor 0
  (eventbox
      :cursor "default"
    (bar)))
